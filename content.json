{"meta":{"title":"柳英伟博客","subtitle":"柳英伟博客","description":"柳英伟博客","author":"柳英伟","url":"http://marvin9002.github.com"},"pages":[{"title":"categories","date":"2018-03-30T06:37:49.000Z","updated":"2018-03-30T06:37:49.655Z","comments":true,"path":"categories/index.html","permalink":"http://marvin9002.github.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-03-30T06:37:32.000Z","updated":"2018-03-30T06:37:32.194Z","comments":true,"path":"tags/index.html","permalink":"http://marvin9002.github.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"python +splinter自动刷新抢票","slug":"python-splinter自动刷新抢票","date":"2018-03-31T09:48:09.000Z","updated":"2018-03-31T09:53:13.985Z","comments":true,"path":"2018/03/31/python-splinter自动刷新抢票/","link":"","permalink":"http://marvin9002.github.com/2018/03/31/python-splinter自动刷新抢票/","excerpt":"一年一度的春运又来了， 今年我自己写了个抢票脚本。 python +splinter自动刷新抢票，可以成功抢到（依赖自己的网络环境太厉害，还有机器的好坏）， 但是感觉不是很完美!","text":"一年一度的春运又来了， 今年我自己写了个抢票脚本。 python +splinter自动刷新抢票，可以成功抢到（依赖自己的网络环境太厉害，还有机器的好坏）， 但是感觉不是很完美! 有大神请指导完善一下（或者有没有别的好点的思路） 不胜感谢 废话不多说，代码帅上来! 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134# -*- coding: utf-8 -*-&quot;&quot;&quot;@author: liuyw&quot;&quot;&quot;from splinter.browser import Browserfrom time import sleepimport tracebackimport time, sysclass huoche(object): &quot;&quot;&quot;docstring for huoche&quot;&quot;&quot; driver_name=&apos;&apos; executable_path=&apos;&apos; #用户名，密码 username = u&quot;xxx@qq.com&quot; passwd = u&quot;xxxx&quot; # cookies值得自己去找, 下面两个分别是上海, 太原南 starts = u&quot;%u4E0A%u6D77%2CSHH&quot; ends = u&quot;%u592A%u539F%2CTYV&quot; # 时间格式2018-01-19 dtime = u&quot;2018-01-19&quot; # 车次，选择第几趟，0则从上之下依次点击 order = 0 ###乘客名 users = [u&quot;xxx&quot;,u&quot;xxx&quot;] ##席位 xb = u&quot;二等座&quot; pz=u&quot;成人票&quot; &quot;&quot;&quot;网址&quot;&quot;&quot; ticket_url = &quot;https://kyfw.12306.cn/otn/leftTicket/init&quot; login_url = &quot;https://kyfw.12306.cn/otn/login/init&quot; initmy_url = &quot;https://kyfw.12306.cn/otn/index/initMy12306&quot; buy=&quot;https://kyfw.12306.cn/otn/confirmPassenger/initDc&quot; login_url=&apos;https://kyfw.12306.cn/otn/login/init&apos; def __init__(self): self.driver_name=&apos;chrome&apos; self.executable_path=&apos;/usr/local/bin/chromedriver&apos; def login(self): self.driver.visit(self.login_url) self.driver.fill(&quot;loginUserDTO.user_name&quot;, self.username) # sleep(1) self.driver.fill(&quot;userDTO.password&quot;, self.passwd) print u&quot;等待验证码，自行输入...&quot; while True: if self.driver.url != self.initmy_url: sleep(1) else: break def start(self): self.driver=Browser(driver_name=self.driver_name,executable_path=self.executable_path) self.driver.driver.set_window_size(1400, 1000) self.login() # sleep(1) self.driver.visit(self.ticket_url) try: print u&quot;购票页面开始...&quot; # sleep(1) # 加载查询信息 self.driver.cookies.add(&#123;&quot;_jc_save_fromStation&quot;: self.starts&#125;) self.driver.cookies.add(&#123;&quot;_jc_save_toStation&quot;: self.ends&#125;) self.driver.cookies.add(&#123;&quot;_jc_save_fromDate&quot;: self.dtime&#125;) self.driver.reload() count=0 if self.order!=0: while self.driver.url==self.ticket_url: self.driver.find_by_text(u&quot;查询&quot;).click() count += 1 print u&quot;循环点击查询... 第 %s 次&quot; % count # sleep(1) try: self.driver.find_by_text(u&quot;预订&quot;)[self.order - 1].click() except Exception as e: print e print u&quot;还没开始预订&quot; continue else: while self.driver.url == self.ticket_url: self.driver.find_by_text(u&quot;查询&quot;).click() count += 1 print u&quot;循环点击查询... 第 %s 次&quot; % count # sleep(0.8) try: for i in self.driver.find_by_text(u&quot;预订&quot;): i.click() sleep(1) except Exception as e: print e print u&quot;还没开始预订 %s&quot; %count continue print u&quot;开始预订...&quot; # sleep(3) # self.driver.reload() sleep(1) print u&apos;开始选择用户...&apos; for user in self.users: self.driver.find_by_text(user).last.click() print u&quot;提交订单...&quot; sleep(1) # self.driver.find_by_text(self.pz).click() # self.driver.find_by_id(&apos;&apos;).select(self.pz) # # sleep(1) # self.driver.find_by_text(self.xb).click() # sleep(1) self.driver.find_by_id(&apos;submitOrder_id&apos;).click() # print u&quot;开始选座...&quot; # self.driver.find_by_id(&apos;1D&apos;).last.click() # self.driver.find_by_id(&apos;1F&apos;).last.click() sleep(1.5) print u&quot;确认选座...&quot; self.driver.find_by_id(&apos;qr_submit_id&apos;).click() except Exception as e: print eif __name__ == &apos;__main__&apos;: huoche=huoche() huoche.start()","categories":[{"name":"后端","slug":"后端","permalink":"http://marvin9002.github.com/categories/后端/"}],"tags":[{"name":"python","slug":"python","permalink":"http://marvin9002.github.com/tags/python/"},{"name":"splinter","slug":"splinter","permalink":"http://marvin9002.github.com/tags/splinter/"},{"name":"火车票","slug":"火车票","permalink":"http://marvin9002.github.com/tags/火车票/"}]},{"title":"PHP高效导出Excel(CSV)","slug":"PHP高效导出Excel-CSV","date":"2018-03-31T09:04:05.000Z","updated":"2018-03-31T10:14:58.890Z","comments":true,"path":"2018/03/31/PHP高效导出Excel-CSV/","link":"","permalink":"http://marvin9002.github.com/2018/03/31/PHP高效导出Excel-CSV/","excerpt":"CSV，是Comma Separated Value（逗号分隔值）的英文缩写，通常都是纯文本文件。如果你导出的Excel没有什么高级用法的话，只是做导出数据用那么建议使用本方法,要比PHPexcel要高效的多。二十万数据导出大概需要2到3秒。","text":"CSV，是Comma Separated Value（逗号分隔值）的英文缩写，通常都是纯文本文件。如果你导出的Excel没有什么高级用法的话，只是做导出数据用那么建议使用本方法,要比PHPexcel要高效的多。二十万数据导出大概需要2到3秒。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051 /** * 导出excel(csv) * @data 导出数据 * @headlist 第一行,列名 * @fileName 输出Excel文件名 */function csv_export($data = array(), $headlist = array(), $fileName) &#123; header(&apos;Content-Type: application/vnd.ms-excel&apos;); header(&apos;Content-Disposition: attachment;filename=&quot;&apos;.$fileName.&apos;.csv&quot;&apos;); header(&apos;Cache-Control: max-age=0&apos;); //打开PHP文件句柄,php://output 表示直接输出到浏览器 $fp = fopen(&apos;php://output&apos;, &apos;a&apos;); //输出Excel列名信息 foreach ($headlist as $key =&gt; $value) &#123; //CSV的Excel支持GBK编码，一定要转换，否则乱码 $headlist[$key] = iconv(&apos;utf-8&apos;, &apos;gbk&apos;, $value); &#125; //将数据通过fputcsv写到文件句柄 fputcsv($fp, $headlist); //计数器 $num = 0; //每隔$limit行，刷新一下输出buffer，不要太大，也不要太小 $limit = 100000; //逐行取出数据，不浪费内存 $count = count($data); for ($i = 0; $i &lt; $count; $i++) &#123; $num++; //刷新一下输出buffer，防止由于数据过多造成问题 if ($limit == $num) &#123; ob_flush(); flush(); $num = 0; &#125; $row = $data[$i]; foreach ($row as $key =&gt; $value) &#123; $row[$key] = iconv(&apos;utf-8&apos;, &apos;gbk&apos;, $value); &#125; fputcsv($fp, $row); &#125; &#125;","categories":[{"name":"后端","slug":"后端","permalink":"http://marvin9002.github.com/categories/后端/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://marvin9002.github.com/tags/PHP/"},{"name":"CSV","slug":"CSV","permalink":"http://marvin9002.github.com/tags/CSV/"}]}]}